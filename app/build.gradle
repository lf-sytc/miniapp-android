apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.uhutu.miniapp.miniapp_android"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            storePassword "ssssss"
            keyAlias "com.uhutu.miniapp.miniapp_android"
            keyPassword "ssssss"
            storeFile file("${rootDir}/keys/miniapp-android.iml.key")
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation project(":mappandroid")
}





task miniappInit(){
    if(file("$rootDir/../node_modules/versions/0.59.10.md").exists()){

        println("miniappInit skip check")
    }
    else{
        println("miniappInit clone soure")
        exec {
            commandLine "git","clone","--branch","v-0.59.10","https://code.aliyun.com/uhutu-miniapp/miniapp-libs.git","$rootDir/../node_modules/"
        }
    }
};

afterEvaluate {
    tasks.matching {
        it.name.equals('preBuild')
    }.each { tk ->
        tk.dependsOn(miniappInit);
    }
}


